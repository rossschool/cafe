var localTimeZone = "New York";
var dateFormatForFileNameString = "MMMM dd";

function CreateNewWeeklySheet() {
/**
 * Makes a duplicate of the ACTIVE weekly sheet and rename the active sheet to Month End date based on cell A1
 */
 var ss = SpreadsheetApp.getActiveSpreadsheet()
 SpreadsheetApp.getActiveSpreadsheet().duplicateActiveSheet();

// The code below will rename the active sheet to Month End date based on cell A1
 var myValue = SpreadsheetApp.getActiveSheet().getRange("A1").getValue();
 var dateString = getDateString_(myValue);
 SpreadsheetApp.getActiveSpreadsheet().renameActiveSheet(dateString);
}

//Function below to get Date as a string
function getDateString_(dateValue) {
      return Utilities.formatDate(dateValue, localTimeZone,
                                  dateFormatForFileNameString);
}

function emailReminder() {
    /**
 * EMAILS reminder message weekly to editors
 */
  // Change LOG * 2016-09-05 add owner to email list -WM
  // * changed wording 2016-09-05 "Reminder - RESIDENTIAL LIFE SUNDAY PACK OUTS REQUEST" -wm
var today = new Date()
        .toLocaleDateString();
var sheet = SpreadsheetApp.getActive()
        .getSheetByName('Tracker');
// Below Code HARD CODES THIS code to this SPREADSHEET if you make a copy of this sheet don't forget to change this dummy!
  var file = DriveApp.getFileById('1jSLELAjNMAc6LswSrvjnnpDE85y4DBpfZY9JscwWjHk');
  var url = file.getUrl()
  var editors = file.getEditors();
  var activeUser = Session.getActiveUser();editors.push(activeUser);
  var subject = "RESIDENTIAL LIFE Reminder - SUNDAY PACK OUTS REQUESTS DUE"; //changed wording 3/3/17 -wm
  var htmlBody = "Please fill out the \"RESIDENTIAL LIFE SUNDAY PACK OUTS\" Google Sheet before Tuesday at 3:00 PM to ensure your order is filled. Thank You." + url;
 
  // Loop through the email address of all users who are editors.
 for (var i = 0; i < editors.length; i++) {
      GmailApp.sendEmail(editors[i].getEmail(), subject, htmlBody); 
   //Logger.log(editors[i].getEmail());
 }
}

function inlineImage() {
// This code fetches the Ross logo, inlines them in an email
 // and sends the email
   
   var RossLogoUrl =
         "http://bbk12e1-cdn.myschoolcdn.com/ftpimages/260/podium/logo3.gif";
  
   var RossLogoBlob = UrlFetchApp
                           .fetch(RossLogoUrl)
                           .getBlob()
                           .setName("RossLogoBlob");
   MailApp.sendEmail({
     to: "rvolinski@ross.org",
     subject: "Ross Logo",
     //htmlBody: "inline Ross Logo <p> <img src='cid:RossLogo' style='vertical-align:middle'>",
     
       htmlBody: "inline Ross Logo <p> <div style='text-align: center'><img src='cid:RossLogo' width='100' /></div>",
     
     inlineImages:
       {
         
         RossLogo: RossLogoBlob
       }
   });
 }
function upWeek(){
  /**
 * Selects/sets the current Weekly sheet and hides last weeks 
 * This funtion works everytime sheet is opened --- gets error if lastweek sheet has been already hidden
  * Change LOG * 
  * 2017-01-12 - HIDES last weeks sheet -WM
  * 2017-11-26 changed to week numbers instead of doy -WM
  * 2018 03-06 - changed to trigger with delay. worked when manually run. didn't work as trigger
  */
  var now = new Date();
  var start = new Date(now.getFullYear(), 0, 0);
  var diff = now - start;
  var oneDay = 1000 * 60 * 60 * 24;
  var day = Math.floor(diff / oneDay);
    
Date.prototype.getWeek = function() {
    var onejan = new Date(this.getFullYear(),0,1);
    weeksnum = Math.ceil((((this - onejan) / 86400000) + onejan.getDay()+1)/7);
    return weeksnum;
}
var now = new Date();
  
    //Below code logs day of year
  Logger.log("DAY OF  YEAR "+day);
   //Below code logs week of year 
  Logger.log("WEEK OF  YEAR "+now.getWeek());
    // Below code logs the number of sheets in the active spreadsheet.
  Logger.log("Total Sheets "+ SpreadsheetApp.getActiveSpreadsheet().getNumSheets());
  
var ss = SpreadsheetApp.getActiveSpreadsheet();
  //changed setup to week number -- easier to figure out - wm 11/26/17
  //changed old 2017 dates need to 2018 dates
  //added new weeks 1/3/18 -wm
  //added by week number instead of day 1/3/18 -wm
  //changed if(weeksnum>=1 && weeksnum <=2) to if(weeksnum>=1 && weeksnum <2) only one sheet open per week 1/14/18 -wm
  //changed onopen() to upWeek() b/c if pend on mobile device script wouldn't run.
  //add trigger to my account for Sunday @1AM to switch 
  //added sleep b/c wasn't switching/hiding sheet
  //tested manually running works; didn't work week 10 changed sleep to 800 3/6/18
  //tested manually again and works 3/6/18
if(weeksnum>=1 && weeksnum <2){Logger.log("Test of Week 1 -GOOD");}
if(weeksnum>=2 && weeksnum <3){ss.setActiveSheet(ss.getSheetByName('Jan-11'));var sheet = ss.getSheetByName('Jan-04');sheet.hideSheet();}
if(weeksnum>=3 && weeksnum <4){ss.setActiveSheet(ss.getSheetByName('Jan-18'));var sheet = ss.getSheetByName('Jan-11');sheet.hideSheet();}
if(weeksnum>=4 && weeksnum <5){ss.setActiveSheet(ss.getSheetByName('Jan-25'));var sheet = ss.getSheetByName('Jan-18');sheet.hideSheet();}
if(weeksnum>=5 && weeksnum <6){ss.setActiveSheet(ss.getSheetByName('Feb-01'));var sheet = ss.getSheetByName('Jan-25');sheet.hideSheet();}
if(weeksnum>=6 && weeksnum <7){ss.setActiveSheet(ss.getSheetByName('Feb-08'));var sheet = ss.getSheetByName('Feb-01');sheet.hideSheet();}
if(weeksnum>=7 && weeksnum <8){ss.setActiveSheet(ss.getSheetByName('Feb-15'));var sheet = ss.getSheetByName('Feb-08');sheet.hideSheet();}
if(weeksnum>=8 && weeksnum <9){ss.setActiveSheet(ss.getSheetByName('Feb-22'));Utilities.sleep(200);var sheet = ss.getSheetByName('Feb-15');sheet.hideSheet();}
if(weeksnum>=9 && weeksnum <10){ss.setActiveSheet(ss.getSheetByName('Mar-01'));Utilities.sleep(200);var sheet = ss.getSheetByName('Feb-22');sheet.hideSheet();}
if(weeksnum>=10 && weeksnum <11){ss.setActiveSheet(ss.getSheetByName('Mar-08'));Utilities.sleep(800);var sheet = ss.getSheetByName('Mar-01');sheet.hideSheet();}
   // START SPRING BREAK
   // END SPRING BREAK
if(weeksnum>=13 && weeksnum <14){ss.setActiveSheet(ss.getSheetByName('Mar-29'));Utilities.sleep(800);var sheet = ss.getSheetByName('Mar-22');sheet.hideSheet();}
if(weeksnum>=14 && weeksnum <15){ss.setActiveSheet(ss.getSheetByName('Apr-05'));Utilities.sleep(800);var sheet = ss.getSheetByName('Mar-29');sheet.hideSheet();}
if(weeksnum>=15 && weeksnum <16){ss.setActiveSheet(ss.getSheetByName('Apr-12'));Utilities.sleep(800);var sheet = ss.getSheetByName('Apr-05');sheet.hideSheet();}
if(weeksnum>=16 && weeksnum <17){ss.setActiveSheet(ss.getSheetByName('Apr-19'));Utilities.sleep(800);var sheet = ss.getSheetByName('Apr-12');sheet.hideSheet();}
if(weeksnum>=17 && weeksnum <18){ss.setActiveSheet(ss.getSheetByName('Apr-26'));Utilities.sleep(800);var sheet = ss.getSheetByName('Apr-19');sheet.hideSheet();}
if(weeksnum>=18 && weeksnum <19){ss.setActiveSheet(ss.getSheetByName('May-03'));Utilities.sleep(800);var sheet = ss.getSheetByName('Apr-26');sheet.hideSheet();}
if(weeksnum>=19 && weeksnum <20){ss.setActiveSheet(ss.getSheetByName('May-10'));Utilities.sleep(800);var sheet = ss.getSheetByName('May-03');sheet.hideSheet();}
if(weeksnum>=20 && weeksnum <21){ss.setActiveSheet(ss.getSheetByName('May-17'));Utilities.sleep(800);var sheet = ss.getSheetByName('May-10');sheet.hideSheet();}
if(weeksnum>=21 && weeksnum <22){ss.setActiveSheet(ss.getSheetByName('May-24'));Utilities.sleep(800);var sheet = ss.getSheetByName('May-17');sheet.hideSheet();}
if(weeksnum>=22 && weeksnum <23){ss.setActiveSheet(ss.getSheetByName('May-31'));Utilities.sleep(800);var sheet = ss.getSheetByName('May-24');sheet.hideSheet();}
if(weeksnum>=23 && weeksnum <24){ss.setActiveSheet(ss.getSheetByName('Jun-07'));Utilities.sleep(800);var sheet = ss.getSheetByName('May-31');sheet.hideSheet();}
if(weeksnum>=24 && weeksnum <25){ss.setActiveSheet(ss.getSheetByName('Jun-14'));Utilities.sleep(800);var sheet = ss.getSheetByName('Jun-07');sheet.hideSheet();}
if(weeksnum>=25 && weeksnum <26){ss.setActiveSheet(ss.getSheetByName('Jun-21'));Utilities.sleep(800);var sheet = ss.getSheetByName('Jun-14');sheet.hideSheet();}
// END SCHOOL YEAR
  // Below code logs the active spreadsheet.
  Logger.log("active spreadsheet "+ ss.getActiveSheet().getName()); 
//START SCHOOL YEAR  
  //updated through xmas break 2017
if (day >=243 && day  <= 250){ss.setActiveSheet(ss.getSheetByName('Sep-07'));var sheet = ss.getSheetByName('June 8');sheet.hideSheet();}
if (day >=251 && day  <= 257){ss.setActiveSheet(ss.getSheetByName('Sep-14'));var sheet = ss.getSheetByName('Sep-07');sheet.hideSheet();}
if (day >=258 && day  <= 264){ss.setActiveSheet(ss.getSheetByName('Sep-21'));var sheet = ss.getSheetByName('Sep-14');sheet.hideSheet();}
if (day >=265 && day  <= 271){ss.setActiveSheet(ss.getSheetByName('Sep-28'));var sheet = ss.getSheetByName('Sep-21');sheet.hideSheet();}
if (day >=272 && day  <= 278){ss.setActiveSheet(ss.getSheetByName('Oct-05'));var sheet = ss.getSheetByName('Sep-28');sheet.hideSheet();}
if (day >=279 && day  <= 285){ss.setActiveSheet(ss.getSheetByName('Oct-12'));var sheet = ss.getSheetByName('Oct-05');sheet.hideSheet();}
if (day >=286 && day  <= 292){ss.setActiveSheet(ss.getSheetByName('Oct-19'));var sheet = ss.getSheetByName('Oct-12');sheet.hideSheet();}
if (day >=293 && day  <= 299){ss.setActiveSheet(ss.getSheetByName('Oct-26'));var sheet = ss.getSheetByName('Oct-19');sheet.hideSheet();}
if (day >=300 && day  <= 306){ss.setActiveSheet(ss.getSheetByName('Nov-02'));var sheet = ss.getSheetByName('Oct-26');sheet.hideSheet();}
if (day >=307 && day  <= 313){ss.setActiveSheet(ss.getSheetByName('Nov-09'));var sheet = ss.getSheetByName('Nov-02');sheet.hideSheet();}
if (day >=314 && day  <= 320){ss.setActiveSheet(ss.getSheetByName('Nov-16'));var sheet = ss.getSheetByName('Nov-09');sheet.hideSheet();}
if (day >=327 && day  <= 333){ss.setActiveSheet(ss.getSheetByName('Nov-30'));var sheet = ss.getSheetByName('Nov 16');sheet.hideSheet();}
//if (day >=327 && day  <= 333){ss.setActiveSheet(ss.getSheetByName('Dec-07'));var sheet = ss.getSheetByName('Nov-30');sheet.hideSheet();}
if (day >=334 && day  <= 340){ss.setActiveSheet(ss.getSheetByName('Dec-14'));var sheet = ss.getSheetByName('Dec-07');sheet.hideSheet();}
//END updated 2017 dates
// START WINTER BREAK
if (day >= 345 && day  <= 365){ss.setActiveSheet(ss.getSheetByName("January 5"));} 

else if (day >= 366) {
  Logger.log("ERROR: day of year-"+day+ " not found in search of dates(ELSEIF)?");                     }
}

function cloneGoogleSheet() {
  
  var name = "labnol";
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = ss.getSheetByName('Template').copyTo(ss);
  
  /* Before cloning the sheet, delete any previous copy */
  //var old = ss.getSheetByName(name);
  //if (old) ss.deleteSheet(old); // or old.setName(new Name);
  
  SpreadsheetApp.flush(); // Utilities.sleep(2000);
  sheet.setName(name);

  /* Make the new sheet active */
  ss.setActiveSheet(sheet);

}
function createFutureSheets() {
  // var sheet = SpreadsheetApp.getActiveSheet();
 // var data = sheet.getDataRange().getValues();
 // for (var i = 0; i < data.length; i++) {
 //   Logger.log('Week: ' + data[i][0]);
 
var ss = SpreadsheetApp.getActiveSpreadsheet();
var sheet = ss.getActiveSheet();
var template1 = ss.getSheetByName('Master').copyTo(ss);
var last = sheet.getLastRow();//identifies the last active row on the sheet

//loop through the code until each row creates a tab.
for(var i=0; i<last; i++){

var tabName = sheet.getRange(i+1,1).getValue();//get the range in column A and get the value.

var create = ss.insertSheet(tabName);//create a new sheet with the value
}
  }
function hideAllSheets(){
   hideAllSheetsExcept('Instructions');
}
function hideAllSheetsExcept(sheetName) {
  var sheets=SpreadsheetApp.getActiveSpreadsheet().getSheets();

  for(var i =0;i<sheets.length;i++){
    Logger.log(i);
    if(sheets[i].getName()!=sheetName){
      sheets[i].hideSheet();
    }
  }
}
function deleteSheets() {
  //var deleteSheetsContaining = Browser.inputBox("Delete sheets with names containing:"); 
  //if (sheetMatch(deleteSheetsContaining)){
    for (var i = 0; i < sheetsCount; i++){
      var sheet = sheets[i]; 
      var sheetName = sheet.getName();
      Logger.log(sheetName);
     //if (sheetName.indexOf(deleteSheetsContaining.toString()) !== -1){
    //   Logger.log("DELETE!");
    ss.deleteSheet(sheet);
      }
   // } 
  //} else {
  //   noMatchAlert();
//  }
}
function showSheets() {
  var showSheetsContaining = Browser.inputBox("Show sheets with names containing:"); 
  if (sheetMatch(showSheetsContaining)){
    for (var i = 0; i < sheetsCount; i++){
      var sheet = sheets[i]; 
      var sheetName = sheet.getName();
      Logger.log(sheetName); 
      if (sheetName.indexOf(showSheetsContaining.toString()) !== -1){
        Logger.log("SHOW!");
        sheet.showSheet();
      }
    } 
  } else {
    noMatchAlert();
  }
}
function removeHidden() {
    var ss = SpreadsheetApp.getActive()
    ss.getSheets()
        .map(function (sh) {
            if (sh.isSheetVisible()) ss.deleteSheet(sh)
        })
}
function CreateNewWeeksFromList() {
  
  
 // var s = ss.getSheetByName("A1+"); //or whichever sheet you wish to duplicate
 // for (i=19;i>0;--i) s.copyTo(ss).setName("A"+i);
 // ss.setActiveSheet(s);
 // ss.moveActiveSheet(1);
  
  //2018-03-06 tested works
  var ss        = SpreadsheetApp.getActiveSpreadsheet();
 // var s = ss.getSheetByName("A1+"); //or whichever sheet you wish to duplicate
  // formatted on 'pickup days' tab in sheet
  Logger.log('ss');
  var weekObjects = [
  {'name':'Apr-05'},
 {'name':'Apr-12'},
 {'name':'Apr-19'},
 {'name':'Apr-26'},
 {'name':'May-03'},
 {'name':'May-10'},
 {'name':'May-17'},
 {'name':'May-24'},
 {'name':'May-31'},
 {'name':'Jun-07'},
 {'name':'Jun-14'},
 {'name':'Jun-21'} ]
  var template = ss.getSheetByName('Master');
  for ( var i=0; i < weekObjects.length; i++) {
      Logger.log(template);
    var WeekName = weekObjects[i].name;

    // get the sheets to check you are not creating a duplicate sheet 
    var sheets = ss.getSheets();
    var ok = true;

    // loop through the sheets and check a duplicate exist 
    for ( var j=0; j<sheets.length;j++ ) {
      if ( sheets[j].getName() == WeekName ) {
        ok = false;
        Logger.log('duplicate');
      }
    }

    if ( ok ) {
      template.copyTo(ss).setName(WeekName);
      Logger.log('WeekName '&WeekName);
      var sheet = SpreadsheetApp.getActiveSheet();
      sheet.hideSheet();

    } else {

      // do whatever you need to do if week name is duplicate

    }
  }
}
